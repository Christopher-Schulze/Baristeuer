// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Verein {
  id                      String @id @default(cuid())
  name                    String
  adresse                 Json?
  steuernummer            String?
  finanzamtAdresse        String?
  hebesatz                Int?
  kleinunternehmerregelung Boolean?
  steuererklaerungen      steuererklaerung[]
}

model steuererklaerung {
  id                               String   @id @default(cuid())
  jahr                             Int
  ideellerBereich                  Json
  vermoegensverwaltung             Json
  zweckbetrieb                     Json
  wirtschaftlicherGeschaeftsbetrieb Json
  vereinId                         String
  verein                           Verein   @relation(fields: [vereinId], references: [id], onDelete: Cascade)
  createdAt                        DateTime @default(now())
  updatedAt                        DateTime @updatedAt

  @@unique([vereinId, jahr])
}
